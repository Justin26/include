//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

#import "SBBulletinWindowClient.h"
#import "SBNotificationCenterViewControllerDelegate.h"
#import "SBWidgetViewControllerHostDelegate.h"
#import "_UISettingsKeyObserver.h"

@class NSArray, SBApplication, SBChevronView, SBNotificationCenterSettings, SBNotificationCenterViewController, SBUnlockActionContext, SBWindow, UIView;

@interface SBNotificationCenterController : NSObject <SBBulletinWindowClient, SBNotificationCenterViewControllerDelegate, SBWidgetViewControllerHostDelegate, _UISettingsKeyObserver>
{
    SBNotificationCenterViewController *_viewController;
    UIView *_coveredContentSnapshot;
    SBApplication *_coveredApplication;
    SBChevronView *_borrowedGrabberView;
    CDUnknownBlockType _borrowedGrabberWillPresentBlock;
    CDUnknownBlockType _borrowedGrabberHideBlock;
    CDUnknownBlockType _borrowedGrabberCompletionBlock;
    NSArray *_dataProviders;
    id _keyboardNotificationObserverToken;
    SBUnlockActionContext *_unlockActionContext;
    long long _presentationState;
    SBNotificationCenterSettings *_settings;
    struct {
        unsigned int isPresentingOrDismissing:1;
        unsigned int isGrabberEnabled:1;
    } _notificationCenterControllerFlags;
}

+ (double)transitionAnimationDuration;
+ (id)newDynamicAnimationForShow:(_Bool)arg1 targetValue:(double)arg2 withInitialValue:(double)arg3 velocity:(double)arg4 extraPull:(_Bool)arg5;
+ (id)sharedInstanceIfExists;
+ (id)sharedInstance;
+ (id)_sharedInstanceCreateIfNecessary:(_Bool)arg1;
@property(readonly, nonatomic) SBNotificationCenterSettings *settings; // @synthesize settings=_settings;
@property(readonly, nonatomic) SBUnlockActionContext *unlockActionContext; // @synthesize unlockActionContext=_unlockActionContext;
@property(readonly, nonatomic) SBNotificationCenterViewController *viewController; // @synthesize viewController=_viewController;
- (void)finishedScrollTest;
- (void)runScrollTest:(id)arg1 iterations:(long long)arg2 delta:(long long)arg3;
- (void)settings:(id)arg1 changedValueForKey:(id)arg2;
- (void)buddyCompleted:(id)arg1;
- (void)publishSectionInfoIfNecessary;
- (id)_widgetSections;
- (id)_sectionWithIdentifier:(id)arg1 forCategory:(long long)arg2;
- (id)_sectionForWidgetBundle:(id)arg1 forCategory:(long long)arg2;
- (id)_copyDefaultEnabledWidgetIDs;
- (void)widget:(id)arg1 requestsPresentationOfViewController:(id)arg2 presentationStyle:(long long)arg3 context:(id)arg4 completion:(CDUnknownBlockType)arg5;
- (void)widget:(id)arg1 requestsLaunchOfURL:(id)arg2;
- (void)bulletinWindowDidRotateFromOrientation:(long long)arg1;
- (void)bulletinWindowIsAnimatingRotationToOrientation:(long long)arg1 duration:(double)arg2;
- (void)bulletinWindowWillRotateToOrientation:(long long)arg1 duration:(double)arg2;
- (void)invalidateUnlockActionContext;
- (_Bool)handleActionForBulletin:(id)arg1;
- (id)widgetViewControllerHostDelegate:(id)arg1;
- (_Bool)_handleActionOrRequestWithDefaultAction:(CDUnknownBlockType)arg1 lockedAction:(CDUnknownBlockType)arg2;
- (void)biometricEventMonitorDidAuthenticate:(id)arg1;
- (void)_updateForChangeInMessagePrivacy;
- (void)reloadAllWidgets;
@property(readonly, nonatomic, getter=isGrabberVisible) _Bool grabberVisible;
- (void)hideGrabberAnimated:(_Bool)arg1 completion:(CDUnknownBlockType)arg2;
- (void)showGrabberAnimated:(_Bool)arg1;
- (_Bool)canShowHideGrabberView;
@property(nonatomic, getter=isGrabberEnabled) _Bool grabberEnabled;
- (void)_setGrabberEnabled:(_Bool)arg1;
- (void)unregisterSharedGrabberView;
- (void)registerSharedGrabberView:(id)arg1 withWillPresentBlock:(CDUnknownBlockType)arg2 hideBlock:(CDUnknownBlockType)arg3 andCompletion:(CDUnknownBlockType)arg4;
- (void)dismissPresentedWidgetContentAnimated:(_Bool)arg1;
- (void)dismissAnimated:(_Bool)arg1 withStepper:(CDUnknownBlockType)arg2 completion:(CDUnknownBlockType)arg3 fromCurrentState:(_Bool)arg4;
- (void)dismissAnimated:(_Bool)arg1 completion:(CDUnknownBlockType)arg2;
- (void)dismissAnimated:(_Bool)arg1;
- (void)presentAnimated:(_Bool)arg1 completion:(CDUnknownBlockType)arg2;
- (void)presentAnimated:(_Bool)arg1;
- (void)_present:(_Bool)arg1 withStandardAnimation:(_Bool)arg2 stepper:(CDUnknownBlockType)arg3 completion:(CDUnknownBlockType)arg4 fromCurrentState:(_Bool)arg5;
- (void)_present:(_Bool)arg1 stepper:(CDUnknownBlockType)arg2;
- (void)cancelTransition;
- (void)endTransitionWithVelocity:(struct CGPoint)arg1 completion:(CDUnknownBlockType)arg2;
- (void)endTransitionWithVelocity:(struct CGPoint)arg1 additionalValueApplier:(CDUnknownBlockType)arg2 completion:(CDUnknownBlockType)arg3;
- (void)updateTransitionWithTouchLocation:(struct CGPoint)arg1 velocity:(struct CGPoint)arg2;
- (void)beginDismissalWithTouchLocation:(struct CGPoint)arg1;
- (void)beginPresentationWithTouchLocation:(struct CGPoint)arg1;
- (void)prepareLayoutForPresentation;
- (void)_cleanupAfterTransition:(_Bool)arg1;
- (void)_setupForDismissalWithTouchLocation:(struct CGPoint)arg1;
- (void)_setupForPresentationWithTouchLocation:(struct CGPoint)arg1;
- (void)_setupForViewPresentation;
- (_Bool)_shouldSelectViewControllerAtTouchLocation;
- (_Bool)doesSectionWithIdentifierUpdateMessagePrivacyViaSectionParameters:(id)arg1;
- (_Bool)handleMenuButtonTap;
@property(nonatomic) _Bool blursBackground;
@property(readonly, nonatomic, getter=isPresentingWidgetContent) _Bool presentingWidgetContent;
@property(readonly, nonatomic, getter=isNotificationsViewAvailableWhileLocked) _Bool notificationsViewAvailableWhileLocked;
@property(readonly, nonatomic, getter=isTodayViewAvailableWhileLocked) _Bool todayViewAvailableWhileLocked;
- (_Bool)_isNotificationCenterViewAvailableWhileLockedWithProfileBlock:(CDUnknownBlockType)arg1 counterpartBlock:(CDUnknownBlockType)arg2;
- (_Bool)_isNotificationCenterViewWithFeatureKeyAvailableWhileLocked:(id)arg1 isLockedDownByRestrictions:(_Bool *)arg2;
@property(readonly, nonatomic, getter=isAvailableWhileLocked) _Bool availableWhileLocked;
@property(readonly, nonatomic, getter=isVisible) _Bool visible;
@property(readonly, nonatomic) SBWindow *window;
- (void)dealloc;
- (id)init;

@end

